{"version":3,"sources":["theme.ts","components/common/StyledTextField.tsx","contexts/ZutatenState.ts","contexts/RezeptState.ts","contexts/MetadataState.ts","resources/verseifungszahlen.ts","contexts/VerseifungsZutatenState.ts","contexts/SeifeContext.tsx","components/Metadata.tsx","hooks/useSetTitle.ts","components/common/SectionTitle.tsx","components/common/NumberField.tsx","components/Rezept.tsx","components/common/InfoText.tsx","components/common/Button.tsx","utils/round.ts","components/zutaten/Zutat.tsx","components/common/Separator.tsx","components/zutaten/ZutatenListe.tsx","components/zutaten/Zutaten.tsx","components/Persistenz.tsx","hooks/useCalculate.ts","components/Info.tsx","components/lauge/LaugeRow.tsx","components/lauge/Lauge.tsx","components/zutaten/NeueZutat.tsx","components/zutaten/NeueZutaten.tsx","App.tsx","index.tsx"],"names":["margins","mainColor","StyledTextField","styled","TextField","defaultZutaten","zutaten","setZutaten","addZutat","removeZutat","updateZutat","useZutatenState","useState","index","anteil","zutat","undefined","slice","name","findIndex","oldZutat","defaultRezept","rezept","laugenunterschuss","gesamtfettmasse","naohAnteil","laugenfluessigkeit","fluessigkeitsanteil","updateRezept","defaultMetadata","metadata","updateMetadata","verseifungszahlen","Aprikosenkernöl","verseifungszahl","jodzahl","Arganöl","Avocadoöl","Babassuöl","Bienenwachs","Brokkolisamenöl","Cameliaöl","Cameliasamenöl","Carnaubawachs","Cashewöl","Cupuacubutter","Distelöl","Erdnussöl","Hanföl","Himbeerkernöl","Himbeersamenöl","Haselnussöl","Johannisbeerkernöl","Johannisbeersamenöl","Jojobaöl","Kaffeebohnenöl","Kakaobutter","Kamelienöl","Kameliensamenöl","Kirschkernöl","Kiwisamenöl","Kokosöl","Kürbiskernöl","Lanolin","Leinöl","Lorbeeröl","Macadamiaöl","Macadamianussöl","Mafurabutter","Maiskeimöl","Mandelöl","Mangobutter","Maracujaöl","Mohnöl","Nachtkerzenöl","Neemöl","Olivenöl","Palmkernöl","Palmöl","Passionsfruchtöl","Passionsfruchtkernöl","Pfirsichkernöl","Pistazienkernöl","Pistazienöl","Rapsbutter","Rapsöl","Reiskeimöl","Rizinusöl","Sanddornkernöl","Schwarzkümmelöl","Sesamöl","Sheabutter","Sojaöl","Sonnenblumenöl","Stearin","Stearinsäure","Teesamenöl","Traubenkernöl","Ucuubabutter","Walnussöl","Weizenkeimöl","Wildrosenöl","Alverdeöl","Ascorbinsäure","zusatz","Essigsäure","Zitronensäure","zutatenNamen","Object","keys","defaultVerseifungsZutaten","getFette","getZusaetze","defaultState","verseifungsZutaten","SeifeContext","createContext","useSeife","useContext","useRezept","useZutaten","useVerseifungsZutaten","SeifeProvider","children","setLaugenunterschuss","setGesamtfettmasse","setNaohAnteil","setLaugenfluessigkeit","setFluessigkeitsanteil","useRezeptState","filter","zutatInfo","newZutat","console","log","useVerseifungsZutatenState","setName","useMetadataState","Provider","value","Metadata","className","debounceTimeout","setDebounceTimeout","setTitle","document","title","useEffect","clearTimeout","setTimeout","useSetTitle","label","onChange","target","SectionTitle","div","validatePercentage","NumberField","props","validate","update","textFieldProps","type","currentTarget","parsed","parseFloat","isNaN","StyledNumberField","RezeptContainer","StyledInputRow","StyledTextFieldBase","LaugeContainer","Rezept","InfoText","InputLabel","Button","MuiButton","round","digits","Math","StyledName","StyledAnteil","StyledMenge","StyledRow","Zutat","menge","onClick","event","preventDefault","Separator","addSeparators","withSeparators","element","ZutatenListe","map","reduce","StyledContainer","StyledFallback","Zutaten","length","Persistenz","calculateLaugeFor","sum","useCalculate","validateAnteile","calculateLauge","laugeFette","laugeZusaetze","lauge","naoh","koh","calculateJodzahl","calculateFluessigkeit","Info","StyledInfo","LaugeRow","StyledAnteile","Lauge","StyledForm","form","StyledLabel","StyledSelect","Select","NeueZutat","zutatenOptions","defaultZutat","setZutat","setAnteil","onSubmit","StyledNeueZutat","NeueZutaten","MenuItem","StyledApp","Line","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.39470077.chunk.js","sourcesContent":["export const margins = {\n  s: '12px',\n  m: '20px',\n};\n\nexport const mainColor = 'lightcoral';\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\nimport { margins } from '../../theme';\n\nexport const StyledTextField = styled(TextField)`\n  margin-right: ${margins.s};\n  max-width: 50%;\n`;\n","import { useState } from 'react';\n\nexport interface Zutat {\n  name: string;\n  anteil: number;\n}\n\nexport interface VerseifungsZutat extends Zutat {\n  zusatz: boolean;\n  verseifungszahl: number;\n  jodzahl: number;\n}\n\nexport interface ZutatenState <ZUTAT extends Zutat> {\n  zutaten: ZUTAT[];\n  setZutaten: (zutaten: ZUTAT[]) => void;\n  addZutat: (name: string, anteil: number) => void;\n  removeZutat: (index: number) => void;\n  updateZutat: (index: number, anteil: number) => void;\n}\n\nexport const defaultZutaten: ZutatenState<Zutat> = {\n  zutaten: [],\n  setZutaten: () => undefined,\n  addZutat: () => undefined,\n  removeZutat: () => undefined,\n  updateZutat: () => undefined,\n};\n\nexport const useZutatenState = <ZUTAT extends Zutat,>(): ZutatenState<ZUTAT> => {\n  const [ zutaten, setZutaten ] = useState<ZUTAT[]>([]);\n\n  const addZutat = (name: string, anteil: number): void => {\n    const index = zutaten.findIndex((zutat) => zutat.name === name);\n\n    const oldZutat = zutaten[index];\n    if (oldZutat !== undefined) {\n      updateZutat(index, oldZutat.anteil + anteil);\n      return;\n    }\n\n    setZutaten([ ...zutaten, { name, anteil } as ZUTAT ]);\n  };\n\n  const removeZutat = (index: number): void => {\n    setZutaten([ ...zutaten.slice(0, index), ...zutaten.slice(index + 1) ]);\n  };\n\n  const updateZutat = (index: number, anteil: number): void => {\n    const zutat = zutaten[index];\n    if (zutat === undefined) {\n      return;\n    }\n    zutat.anteil = anteil;\n    setZutaten([ ...zutaten.slice(0, index), zutat, ...zutaten.slice(index + 1) ]);\n  };\n\n  return { zutaten, setZutaten, addZutat, removeZutat, updateZutat };\n};\n\n","import { useState } from 'react';\n\nexport interface Rezept {\n  laugenunterschuss: number;\n  gesamtfettmasse: number;\n  naohAnteil: number;\n  laugenfluessigkeit: string;\n  fluessigkeitsanteil: number;\n}\n\nexport interface RezeptState {\n  rezept: Rezept;\n  updateRezept: (seife: Partial<Rezept>) => void;\n}\n\nexport const defaultRezept: RezeptState = {\n  rezept: {\n    laugenunterschuss: 10,\n    gesamtfettmasse: 300,\n    naohAnteil: 100,\n    laugenfluessigkeit: 'Wasser',\n    fluessigkeitsanteil: 30,\n  },\n  updateRezept: () => undefined,\n};\n\nexport const useRezeptState = (): RezeptState => {\n  const [ laugenunterschuss, setLaugenunterschuss ] = useState(defaultRezept.rezept.laugenunterschuss);\n  const [ gesamtfettmasse, setGesamtfettmasse ] = useState(defaultRezept.rezept.gesamtfettmasse);\n  const [ naohAnteil, setNaohAnteil ] = useState(defaultRezept.rezept.naohAnteil);\n  const [ laugenfluessigkeit, setLaugenfluessigkeit ] = useState(defaultRezept.rezept.laugenfluessigkeit);\n  const [ fluessigkeitsanteil, setFluessigkeitsanteil ] = useState(defaultRezept.rezept.fluessigkeitsanteil);\n\n  const updateRezept = ({ laugenunterschuss, gesamtfettmasse, naohAnteil, laugenfluessigkeit, fluessigkeitsanteil }: Partial<Rezept>): void => {\n    if (laugenunterschuss !== undefined) {\n      setLaugenunterschuss(laugenunterschuss);\n    }\n\n    if (gesamtfettmasse !== undefined) {\n      setGesamtfettmasse(gesamtfettmasse);\n    }\n\n    if (naohAnteil !== undefined) {\n      setNaohAnteil(naohAnteil);\n    }\n\n    if (laugenfluessigkeit !== undefined) {\n      setLaugenfluessigkeit(laugenfluessigkeit);\n    }\n\n    if (fluessigkeitsanteil !== undefined) {\n      setFluessigkeitsanteil(fluessigkeitsanteil);\n    }\n  };\n\n  return {\n    rezept: {\n      laugenunterschuss,\n      gesamtfettmasse,\n      naohAnteil,\n      laugenfluessigkeit,\n      fluessigkeitsanteil,\n    },\n    updateRezept,\n  };\n};\n\n","import { useState } from 'react';\n\nexport interface Metadata {\n  name: string;\n}\n\nexport interface MetadataState {\n  metadata: Metadata;\n  updateMetadata: (seife: Partial<Metadata>) => void;\n}\n\nexport const defaultMetadata: MetadataState = {\n  metadata: { name: 'Seife' },\n  updateMetadata: () => undefined,\n};\n\nexport const useMetadataState = (): MetadataState => {\n  const [ name, setName ] = useState(defaultMetadata.metadata.name);\n\n  const updateMeta = ({ name }: Partial<Metadata>): void => {\n    if (name !== undefined) {\n      setName(name);\n    }\n  };\n\n  return {\n    metadata: { name },\n    updateMetadata: updateMeta,\n  };\n};\n","/* eslint-disable @typescript-eslint/naming-convention */\n\nexport const umrechnungsfaktor = 1.40272;\n\ninterface ZutatInfo {\n  verseifungszahl: number;\n  jodzahl: number;\n  zusatz?: boolean;\n}\n\nexport const verseifungszahlen: { [name: string]: ZutatInfo } = {\n  Aprikosenkernöl: {\n    verseifungszahl: 135,\n    jodzahl: 100,\n  },\n  Arganöl: {\n    verseifungszahl: 136,\n    jodzahl: 100,\n  },\n  Avocadoöl: {\n    verseifungszahl: 133.5,\n    jodzahl: 87.5,\n  },\n  Babassuöl: {\n    verseifungszahl: 175,\n    jodzahl: 16,\n  },\n  Bienenwachs: {\n    verseifungszahl: 69,\n    jodzahl: 11,\n  },\n  Brokkolisamenöl: {\n    verseifungszahl: 124.8,\n    jodzahl: 105,\n  },\n  Cameliaöl: {\n    verseifungszahl: 136,\n    jodzahl: 82,\n  },\n  Cameliasamenöl: {\n    verseifungszahl: 136,\n    jodzahl: 82,\n  },\n  Carnaubawachs: {\n    verseifungszahl: 69,\n    jodzahl: 8,\n  },\n  Cashewöl: {\n    verseifungszahl: 137.9,\n    jodzahl: 83,\n  },\n  Cupuacubutter: {\n    verseifungszahl: 138,\n    jodzahl: 45,\n  },\n  Distelöl: {\n    verseifungszahl: 135.5,\n    jodzahl: 102.5,\n  },\n  'Distelöl HO': {\n    verseifungszahl: 135.5,\n    jodzahl: 93,\n  },\n  Erdnussöl: {\n    verseifungszahl: 135.5,\n    jodzahl: 156,\n  },\n  Hanföl: {\n    verseifungszahl: 134.5,\n    jodzahl: 152.5,\n  },\n  Himbeerkernöl: {\n    verseifungszahl: 134,\n    jodzahl: 170,\n  },\n  Himbeersamenöl: {\n    verseifungszahl: 134,\n    jodzahl: 170,\n  },\n  Haselnussöl: {\n    verseifungszahl: 137,\n    jodzahl: 96.5,\n  },\n  Johannisbeerkernöl: {\n    verseifungszahl: 134,\n    jodzahl: 175,\n  },\n  Johannisbeersamenöl: {\n    verseifungszahl: 134,\n    jodzahl: 175,\n  },\n  Jojobaöl: {\n    verseifungszahl: 66,\n    jodzahl: 82.5,\n  },\n  Kaffeebohnenöl: {\n    verseifungszahl: 139,\n    jodzahl: 87,\n  },\n  Kakaobutter: {\n    verseifungszahl: 137,\n    jodzahl: 37.5,\n  },\n  Kamelienöl: {\n    verseifungszahl: 136,\n    jodzahl: 86,\n  },\n  Kameliensamenöl: {\n    verseifungszahl: 136,\n    jodzahl: 86,\n  },\n  Kirschkernöl: {\n    verseifungszahl: 139,\n    jodzahl: 126,\n  },\n  Kiwisamenöl: {\n    verseifungszahl: 139.7,\n    jodzahl: 123,\n  },\n  Kokosöl: {\n    verseifungszahl: 183,\n    jodzahl: 8.5,\n  },\n  'Kokosöl nativ': {\n    verseifungszahl: 183,\n    jodzahl: 8.5,\n  },\n  Kürbiskernöl: {\n    verseifungszahl: 135,\n    jodzahl: 132,\n  },\n  Lanolin: {\n    verseifungszahl: 75,\n    jodzahl: 32,\n  },\n  Leinöl: {\n    verseifungszahl: 134,\n    jodzahl: 175,\n  },\n  Lorbeeröl: {\n    verseifungszahl: 140.5,\n    jodzahl: 60,\n  },\n  Macadamiaöl: {\n    verseifungszahl: 139,\n    jodzahl: 76,\n  },\n  Macadamianussöl: {\n    verseifungszahl: 139,\n    jodzahl: 76,\n  },\n  Mafurabutter: {\n    verseifungszahl: 139.7,\n    jodzahl: 70,\n  },\n  Maiskeimöl: {\n    verseifungszahl: 136,\n    jodzahl: 116.5,\n  },\n  Mandelöl: {\n    verseifungszahl: 136.5,\n    jodzahl: 99.5,\n  },\n  Mangobutter: {\n    verseifungszahl: 133.9,\n    jodzahl: 60,\n  },\n  Maracujaöl: {\n    verseifungszahl: 130,\n    jodzahl: 124,\n  },\n  Mohnöl: {\n    verseifungszahl: 138.3,\n    jodzahl: 134,\n  },\n  Nachtkerzenöl: {\n    verseifungszahl: 134.5,\n    jodzahl: 153.5,\n  },\n  Neemöl: {\n    verseifungszahl: 139,\n    jodzahl: 66,\n  },\n  Olivenöl: {\n    verseifungszahl: 134.5,\n    jodzahl: 83.5,\n  },\n  Palmkernöl: {\n    verseifungszahl: 168,\n    jodzahl: 19,\n  },\n  Palmöl: {\n    verseifungszahl: 140.5,\n    jodzahl: 54,\n  },\n  Passionsfruchtöl: {\n    verseifungszahl: 129,\n    jodzahl: 124,\n  },\n  Passionsfruchtkernöl: {\n    verseifungszahl: 129,\n    jodzahl: 124,\n  },\n  Pfirsichkernöl: {\n    verseifungszahl: 134.5,\n    jodzahl: 113,\n  },\n  Pistazienkernöl: {\n    verseifungszahl: 132.6,\n    jodzahl: 92,\n  },\n  Pistazienöl: {\n    verseifungszahl: 132.6,\n    jodzahl: 92,\n  },\n  Rapsbutter: {\n    verseifungszahl: 155,\n    jodzahl: 95,\n  },\n  Rapsöl: {\n    verseifungszahl: 135.4,\n    jodzahl: 107.5,\n  },\n  Reiskeimöl: {\n    verseifungszahl: 134.5,\n    jodzahl: 104,\n  },\n  Rizinusöl: {\n    verseifungszahl: 128.6,\n    jodzahl: 86,\n  },\n  Sanddornkernöl: {\n    verseifungszahl: 116,\n    jodzahl: 60,\n  },\n  Schwarzkümmelöl: {\n    verseifungszahl: 135,\n    jodzahl: 124,\n  },\n  Sesamöl: {\n    verseifungszahl: 137.6,\n    jodzahl: 110,\n  },\n  Sheabutter: {\n    verseifungszahl: 128.2,\n    jodzahl: 63,\n  },\n  Sojaöl: {\n    verseifungszahl: 135.5,\n    jodzahl: 128,\n  },\n  Sonnenblumenöl: {\n    verseifungszahl: 135,\n    jodzahl: 130,\n  },\n  'Sonnenblumenöl HO': {\n    verseifungszahl: 135,\n    jodzahl: 85,\n  },\n  Stearin: {\n    verseifungszahl: 141,\n    jodzahl: 2.5,\n  },\n  Stearinsäure: {\n    verseifungszahl: 146,\n    jodzahl: 2.5,\n  },\n  Teesamenöl: {\n    verseifungszahl: 136,\n    jodzahl: 86,\n  },\n  Traubenkernöl: {\n    verseifungszahl: 128.5,\n    jodzahl: 133.5,\n  },\n  Ucuubabutter: {\n    verseifungszahl: 122,\n    jodzahl: 10,\n  },\n  Walnussöl: {\n    verseifungszahl: 133.5,\n    jodzahl: 145,\n  },\n  Weizenkeimöl: {\n    verseifungszahl: 131,\n    jodzahl: 130,\n  },\n  Wildrosenöl: {\n    verseifungszahl: 135.9,\n    jodzahl: 164,\n  },\n  Alverdeöl: {\n    verseifungszahl: 130.0,\n    jodzahl: 128,\n  },\n  Ascorbinsäure: {\n    verseifungszahl: 227,\n    jodzahl: 0,\n    zusatz: true,\n  },\n  Essigsäure: {\n    verseifungszahl: 666,\n    jodzahl: 0,\n    zusatz: true,\n  },\n  Zitronensäure: {\n    verseifungszahl: 571,\n    jodzahl: 0,\n    zusatz: true,\n  },\n};\n\nexport const zutatenNamen = Object.keys(verseifungszahlen);\n","import { verseifungszahlen } from '../resources/verseifungszahlen';\nimport { VerseifungsZutat, ZutatenState, defaultZutaten, useZutatenState } from './ZutatenState';\n\nexport interface VerseifungsZutatenState extends ZutatenState <VerseifungsZutat> {\n  getFette: () => VerseifungsZutat[];\n  getZusaetze: () => VerseifungsZutat[];\n}\n\nexport const defaultVerseifungsZutaten: VerseifungsZutatenState = {\n  ...defaultZutaten,\n  zutaten: [],\n  getFette: () => [],\n  getZusaetze: () => [],\n  addZutat: () => undefined,\n};\n\nexport const useVerseifungsZutatenState = (): VerseifungsZutatenState => {\n  const { zutaten, setZutaten, updateZutat, removeZutat } = useZutatenState<VerseifungsZutat>();\n\n  const getFette = (): VerseifungsZutat[] => {\n    return zutaten.filter(({ zusatz }) => !zusatz);\n  };\n\n  const getZusaetze = (): VerseifungsZutat[] => {\n    return zutaten.filter(({ zusatz }) => zusatz);\n  };\n\n  const addZutat = (name: string, anteil: number): void => {\n    const index = zutaten.findIndex((zutat) => zutat.name === name);\n\n    const oldZutat = zutaten[index];\n    if (oldZutat !== undefined) {\n      updateZutat(index, oldZutat.anteil + anteil);\n      return;\n    }\n\n    const zutatInfo = verseifungszahlen[name];\n\n    if (zutatInfo === undefined) {\n      console.log('keine Zutat:', name);\n      return;\n    }\n\n    const { verseifungszahl, jodzahl, zusatz } = zutatInfo;\n    const newZutat: VerseifungsZutat = { name, anteil, verseifungszahl, jodzahl, zusatz: zusatz ?? false };\n\n    setZutaten([ ...zutaten, newZutat ]);\n    return;\n  };\n\n  return { zutaten, setZutaten, getFette, getZusaetze, addZutat, removeZutat, updateZutat };\n};\n","import React, { FC, createContext, useContext } from 'react';\nimport {\n  Zutat,\n  ZutatenState,\n  defaultZutaten,\n  useZutatenState,\n} from './ZutatenState';\nimport { RezeptState, defaultRezept, useRezeptState } from './RezeptState';\nimport { MetadataState, defaultMetadata, useMetadataState } from './MetadataState';\nimport {\n  VerseifungsZutatenState,\n  defaultVerseifungsZutaten,\n  useVerseifungsZutatenState,\n} from './VerseifungsZutatenState';\n\nexport interface SeifeState {\n  rezept: RezeptState;\n  zutaten: ZutatenState<Zutat>;\n  verseifungsZutaten: VerseifungsZutatenState;\n  metadata: MetadataState;\n}\n\nexport const defaultState: SeifeState = {\n  rezept: defaultRezept,\n  zutaten: defaultZutaten,\n  verseifungsZutaten: defaultVerseifungsZutaten,\n  metadata: defaultMetadata,\n};\n\nconst SeifeContext = createContext(defaultState);\nconst useSeife = (): SeifeState => useContext(SeifeContext);\nexport const useRezept = (): RezeptState => useSeife().rezept;\nexport const useZutaten = (): ZutatenState<Zutat> => useSeife().zutaten;\nexport const useVerseifungsZutaten = (): VerseifungsZutatenState => useSeife().verseifungsZutaten;\nexport const useMetadata = (): MetadataState => useSeife().metadata;\n\nexport const SeifeProvider: FC = ({ children })=> {\n  const rezept = useRezeptState();\n  const zutaten = useZutatenState();\n  const verseifungsZutaten = useVerseifungsZutatenState();\n  const metadata = useMetadataState();\n\n  return <SeifeContext.Provider value ={{ rezept, zutaten, verseifungsZutaten, metadata }}>{children}</SeifeContext.Provider>;\n};\n","import React, { FC } from 'react';\n\nimport { DefaultProps } from './common/DefaultProps';\nimport { StyledTextField } from './common/StyledTextField';\nimport { useMetadata } from '../contexts/SeifeContext';\nimport { useSetTitle } from '../hooks/useSetTitle';\n\nexport const Metadata: FC<DefaultProps> = ({ className }) => {\n  const { metadata: { name }, updateMetadata } = useMetadata();\n  useSetTitle(name);\n\n  return (\n    <StyledTextField\n      className={className}\n      label={'Name'}\n      value={name}\n      onChange={({ target: { value: name } }) => updateMetadata({ name })}\n    />\n  );\n};\n","import { useEffect, useState } from 'react';\n\nexport const useSetTitle = (name: string): void => {\n  const [ debounceTimeout, setDebounceTimeout ] = useState<NodeJS.Timeout | undefined>(undefined);\n\n  const setTitle = (): void => {\n    document.title = `${name} - Seifenrechner by weissu42`;\n  };\n\n  const updateTitle = (): void => {\n    if (debounceTimeout !== undefined) {\n      clearTimeout(debounceTimeout);\n    }\n\n    setDebounceTimeout(setTimeout(setTitle, 1000));\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(setTitle , []);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(updateTitle,[ name ]);\n};\n","import styled from '@emotion/styled';\nimport { mainColor, margins } from '../../theme';\n\nexport const SectionTitle = styled.div`\n  text-transform: uppercase;\n  font-weight: bold;\n  color: ${mainColor};\n  margin-bottom: ${margins.m};\n`;\n","import React, { FC } from 'react';\n\nimport { TextField, TextFieldProps } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { margins } from '../../theme';\n\ninterface NumberTextFieldProps {\n  validate?: (value: number) => boolean;\n  update: (value: number) => void;\n}\n\nconst validatePercentage = (value: number): boolean => (0 <= value && value <= 100);\n\nexport const NumberField: FC <NumberTextFieldProps & TextFieldProps> = (props) => {\n  const { validate, update, ...textFieldProps } = props;\n\n  const onChange = ({ currentTarget: { value } }: React.ChangeEvent<HTMLInputElement>): void => {\n    const parsed = parseFloat(value !== '' ? value : '0');\n\n    if (isNaN(parsed) || !(validate ?? validatePercentage)(parsed)) {\n      return;\n    }\n\n    update(parsed);\n  };\n\n  return (\n    <TextField\n      {...textFieldProps}\n      type=\"number\"\n      onChange={onChange}\n    />\n  );\n};\n\nexport const StyledNumberField = styled(NumberField)`\n  margin-right: ${margins.s};\n`;\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\n\nimport { DefaultProps } from './common/DefaultProps';\nimport { margins } from '../theme';\nimport { SectionTitle } from './common/SectionTitle';\nimport { StyledNumberField } from './common/NumberField';\nimport { useRezept } from '../contexts/SeifeContext';\nimport { StyledTextField as StyledTextFieldBase } from './common/StyledTextField';\n\nconst RezeptContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledInputRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  margin: 0 ${margins.s} ${margins.m} 0;\n`;\n\nconst StyledTextField = styled(StyledTextFieldBase)`\n  margin-left: ${margins.s};\n`;\n\nconst LaugeContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-self: start;\n  align-items: baseline;\n`;\n\nexport const Rezept: FC<DefaultProps> = ({ className }) => {\n  const {\n    rezept: {\n      laugenunterschuss,\n      gesamtfettmasse,\n      naohAnteil,\n      laugenfluessigkeit,\n      fluessigkeitsanteil,\n    },\n    updateRezept,\n  } = useRezept();\n\n  return (\n    <div className={className}>\n      <SectionTitle>Rezept</SectionTitle>\n      <RezeptContainer>\n        <StyledInputRow>\n          <StyledNumberField\n            label=\"Gesamtfettmasse\"\n            value={gesamtfettmasse}\n            validate={(value) => 0 <= value}\n            update={(value) => updateRezept({ gesamtfettmasse: value })}\n          /> g\n        </StyledInputRow>\n        <StyledInputRow>\n          <StyledNumberField\n            label=\"Flüssigkeitsanteil\"\n            value={fluessigkeitsanteil}\n            validate={(value) => 0 <= value}\n            update={(value) => updateRezept({ fluessigkeitsanteil: value })}\n          /> %\n          <StyledTextField\n            label=\"Laugenflüssigkeit\"\n            value={laugenfluessigkeit}\n            onChange={({ currentTarget: { value } }): void => updateRezept({ laugenfluessigkeit: value })}\n          />\n        </StyledInputRow>\n        <LaugeContainer>\n          <StyledInputRow>\n            <StyledNumberField\n              label=\"Laugenunterschuss\"\n              value={laugenunterschuss}\n              update={(value) => updateRezept({ laugenunterschuss: value })}\n            /> %\n          </StyledInputRow>\n          <StyledInputRow>\n            <StyledNumberField\n              label=\"NaOH-Anteil\"\n              value={naohAnteil}\n              update={(value) => updateRezept({ naohAnteil: value })}\n            /> %\n          </StyledInputRow>\n        </LaugeContainer>\n      </RezeptContainer>\n    </div>\n  );\n};\n","import { InputLabel } from '@mui/material';\n\nexport const InfoText = InputLabel;\n","import { Button as MuiButton } from '@mui/material';\nimport styled from '@emotion/styled';\n\nimport { mainColor } from '../../theme';\n\nexport const Button = styled(MuiButton)`\n  color: ${mainColor};\n`;\n","export const round = (value: number, digits = 2): number => {\n  return Math.round(value * 10 ** digits) / 10 ** digits;\n};\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport { DefaultProps } from '../common/DefaultProps';\nimport { margins } from '../../theme';\nimport { NumberField } from '../common/NumberField';\nimport { Button } from '../common/Button';\nimport { round } from '../../utils/round';\nimport { InfoText } from '../common/InfoText';\nimport { Zutat as ZutatModel, ZutatenState } from '../../contexts/ZutatenState';\n\nconst StyledName = styled(InfoText)`\n  flex: 1;\n  margin: 0 ${margins.s};\n`;\n\nconst StyledAnteil = styled(NumberField)`\n  width: 20%;\n  margin-right: ${margins.s};\n`;\n\nconst StyledMenge = styled(InfoText)`\n  width: 20%;\n  margin: 0 ${margins.s};\n`;\n\ninterface ZutatProps<ZUTAT extends ZutatModel> extends DefaultProps {\n  useZutaten: () => ZutatenState<ZUTAT>;\n  zutat: ZUTAT;\n  gesamtfettmasse: number;\n  index: number;\n}\n\nexport const StyledRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n  width: 100%;\n  margin: 0 ${margins.s}\n`;\n\nexport const Zutat = <ZUTAT extends ZutatModel, >({\n  useZutaten,\n  zutat: { name, anteil },\n  gesamtfettmasse,\n  index,\n  className,\n}: ZutatProps<ZUTAT>): JSX.Element => {\n  const { updateZutat, removeZutat } = useZutaten();\n\n  const onRemove = (event: React.FormEvent): void => {\n    event.preventDefault();\n    removeZutat(index);\n  };\n\n  return (\n    <StyledRow className={className}>\n      <StyledName>{name}</StyledName>\n      <StyledMenge>{round(gesamtfettmasse * anteil / 100)} g</StyledMenge>\n      <StyledAnteil\n        value={anteil}\n        update={(menge: number): void => updateZutat(index, menge)}\n      /> %\n      <Button onClick={onRemove}>Entfernen</Button>\n    </StyledRow>\n  );\n};\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport { margins } from '../../theme';\n\nexport const Separator = styled.div`\n  height: ${margins.s};\n`;\n\nexport const addSeparators = (withSeparators: JSX.Element[], element: JSX.Element, index: number): JSX.Element[] => {\n  return (index === 0 ? [ element ] : [ ...withSeparators, <Separator key={`separator-${index}`}/>, element ]);\n};\n","import React from 'react';\nimport { Zutat as ZutatModel, ZutatenState } from '../../contexts/ZutatenState';\nimport { Zutat } from './Zutat';\nimport { addSeparators } from '../common/Separator';\n\ninterface ZutatenListeProps<ZUTAT extends ZutatModel> {\n  useZutaten: () => ZutatenState<ZUTAT>;\n  gesamtfettmasse: number;\n}\n\nexport const ZutatenListe = <ZUTAT extends ZutatModel, >({\n  useZutaten,\n  gesamtfettmasse,\n}: ZutatenListeProps<ZUTAT>): JSX.Element => {\n  const { zutaten } = useZutaten();\n\n  return (<>\n    {zutaten.map((zutat, index) => (\n      <Zutat\n        useZutaten={useZutaten}\n        zutat={zutat}\n        gesamtfettmasse={gesamtfettmasse}\n        index={index}\n        key={index}\n      />)).reduce(addSeparators, [])}\n  </>);\n};\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\nimport { margins } from '../../theme';\nimport { DefaultProps } from '../common/DefaultProps';\nimport { SectionTitle } from '../common/SectionTitle';\nimport { InfoText } from '../common/InfoText';\nimport { useRezept, useVerseifungsZutaten, useZutaten } from '../../contexts/SeifeContext';\nimport { ZutatenListe } from './ZutatenListe';\nimport { Separator } from '../common/Separator';\n\nconst StyledContainer = styled.div`\n  margin-bottom: ${margins.m};\n`;\n\nconst StyledFallback = styled(InfoText)`\n  margin-left: ${margins.s};\n`;\n\nexport const Zutaten: FC<DefaultProps> = ({ className }) => {\n  const { zutaten: verseifungsZutaten } = useVerseifungsZutaten();\n  const { zutaten } = useZutaten();\n  const { rezept: { gesamtfettmasse } } = useRezept();\n\n  return (\n    <StyledContainer className={className}>\n      <SectionTitle>Zutaten</SectionTitle>\n      {verseifungsZutaten.length > 0\n        ? <ZutatenListe useZutaten={useVerseifungsZutaten} gesamtfettmasse={gesamtfettmasse} />\n        : <StyledFallback>Noch keine Öle und Fette eingegeben</StyledFallback>\n      }\n      {zutaten.length > 0\n        ? (\n          <>\n            <Separator />\n            <ZutatenListe useZutaten={useZutaten} gesamtfettmasse={gesamtfettmasse} />\n          </>\n        )\n        : undefined\n      }\n    </StyledContainer>\n  );\n};\n","import { FC } from 'react';\nimport { DefaultProps } from './common/DefaultProps';\n\nexport const Persistenz: FC<DefaultProps> = () => {\n  return null; // TOOD\n};\n","import { umrechnungsfaktor } from '../resources/verseifungszahlen';\nimport { VerseifungsZutat } from '../contexts/ZutatenState';\nimport { useRezept, useVerseifungsZutaten } from '../contexts/SeifeContext';\n\ninterface Lauge {\n  naoh: number;\n  koh: number;\n}\n\ninterface UseCalculate {\n  calculateLauge: () => Lauge | undefined;\n  calculateJodzahl: () => number | undefined;\n  calculateFluessigkeit: () => number;\n}\n\nconst calculateLaugeFor = (zutaten: VerseifungsZutat[]): number => zutaten\n  .map(({ verseifungszahl, anteil }) => verseifungszahl * anteil)\n  .reduce((sum, menge) => sum + menge, 0) / 1000 / 100;\n\nexport const useCalculate = (): UseCalculate => {\n  const {\n    rezept: {\n      gesamtfettmasse,\n      laugenunterschuss,\n      naohAnteil,\n      fluessigkeitsanteil,\n    },\n  } = useRezept();\n  const { getFette, getZusaetze } = useVerseifungsZutaten();\n\n  const validateAnteile = (): boolean => {\n    const anteilSum = getFette().reduce<number>((sum, { anteil }) => sum + anteil, 0);\n    return anteilSum === 100;\n  };\n\n  const calculateLauge = (): Lauge | undefined => {\n    if (!validateAnteile()) {\n      return undefined;\n    }\n\n    const laugeFette = calculateLaugeFor(getFette());\n    const laugeZusaetze = calculateLaugeFor(getZusaetze());\n    const lauge = gesamtfettmasse * ((100 - laugenunterschuss) / 100 * laugeFette + laugeZusaetze);\n\n    return {\n      naoh: lauge,\n      koh: lauge * (100 - naohAnteil) / 100 * umrechnungsfaktor,\n    };\n  };\n\n  const calculateJodzahl = (): number | undefined => {\n    if (!validateAnteile()) {\n      return undefined;\n    }\n\n    const jodzahl = getFette()\n      .map(({ jodzahl, anteil }) => jodzahl * anteil)\n      .reduce((sum, menge) => sum + menge);\n\n    return jodzahl / 100;\n  };\n\n  const calculateFluessigkeit = (): number => {\n    return gesamtfettmasse * fluessigkeitsanteil / 100;\n  };\n\n  return { calculateLauge, calculateJodzahl, calculateFluessigkeit };\n};\n","import React, { FC } from 'react';\nimport { InputLabel } from '@mui/material';\nimport { useCalculate } from '../hooks/useCalculate';\nimport { SectionTitle } from './common/SectionTitle';\n\nexport const Info: FC = () => {\n  const { calculateJodzahl } = useCalculate();\n\n  const jodzahl = calculateJodzahl();\n  return (\n    <>\n      <SectionTitle>Informationen</SectionTitle>\n      <InputLabel>Jodzahl: {jodzahl ?? '?'}</InputLabel>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\nimport { round } from '../../utils/round';\nimport { InfoText } from '../common/InfoText';\nimport { margins } from '../../theme';\n\nconst StyledInfo = styled(InfoText)`\n  min-width: 30%;\n  margin-right: ${margins.s};\n`;\n\nconst StyledRow = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\ninterface RowProps {\n  menge: number | undefined;\n  name: 'NaOH' | 'KOH';\n  anteil: number;\n}\n\nexport const LaugeRow: FC<RowProps> = ({ menge, name, anteil }) => (\n  anteil !== 0\n    ? <StyledRow>\n      <StyledInfo>{name}: {menge !== undefined ? `${round(menge)} g` : '?'}</StyledInfo>\n      <StyledInfo> (Anteil: {anteil} %)</StyledInfo>\n    </StyledRow>\n    : null\n);\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\nimport { useCalculate } from '../../hooks/useCalculate';\nimport { InfoText } from '../common/InfoText';\nimport { margins } from '../../theme';\nimport { LaugeRow } from './LaugeRow';\nimport { useRezept, useVerseifungsZutaten } from '../../contexts/SeifeContext';\n\nconst StyledAnteile = styled(InfoText)`\n  margin-bottom: ${margins.s};\n`;\n\nexport const Lauge: FC = () => {\n  const { rezept: { naohAnteil, laugenfluessigkeit } } = useRezept();\n  const { getFette } = useVerseifungsZutaten();\n  const { calculateLauge, calculateFluessigkeit } = useCalculate();\n\n  const lauge = calculateLauge();\n\n  return (<>\n    <StyledAnteile>\n      Summe der Anteile: {getFette().reduce((sum, { anteil }) => sum + anteil, 0)} %\n    </StyledAnteile>\n    <InfoText>{laugenfluessigkeit}: {calculateFluessigkeit()} g</InfoText>\n    <LaugeRow\n      menge={lauge?.naoh}\n      name={'NaOH'}\n      anteil={naohAnteil}\n    />\n    <LaugeRow\n      menge={lauge?.koh}\n      name={'KOH'}\n      anteil={100 - naohAnteil}\n    />\n  </>);\n};\n\n","import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Select, TextField } from '@mui/material';\n\nimport { DefaultProps } from '../common/DefaultProps';\nimport { Button } from '../common/Button';\nimport { StyledNumberField } from '../common/NumberField';\nimport { zutatenNamen } from '../../resources/verseifungszahlen';\nimport { margins } from '../../theme';\nimport { InfoText } from '../common/InfoText';\nimport { Zutat, ZutatenState } from '../../contexts/ZutatenState';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledLabel = styled(InfoText)`\n  flex: 1;\n`;\n\nconst StyledSelect = styled(Select)`\n  margin: 0 ${margins.s};\n  min-width: 200px;\n`;\n\nconst StyledTextField = styled(TextField)`\n  margin: 0 ${margins.s};\n  min-width: 200px;\n`;\n\ninterface NeueZutatProps<ZUTAT extends Zutat> extends DefaultProps {\n  label: string;\n  useZutaten: () => ZutatenState<ZUTAT>;\n  zutatenOptions?: JSX.Element[];\n}\n\nexport const NeueZutat = <ZUTAT extends Zutat>({ label, useZutaten, zutatenOptions, className }: NeueZutatProps<ZUTAT>): JSX.Element => {\n  const defaultZutat = zutatenOptions ? (zutatenNamen[0] ?? '') : '';\n\n  const { addZutat } = useZutaten();\n  const [ zutat, setZutat ] = useState(defaultZutat);\n  const [ anteil, setAnteil ] = useState(0);\n\n  const onSubmitZutat = (event: React.FormEvent): void => {\n    event.preventDefault();\n\n    addZutat(zutat, anteil);\n    setZutat(defaultZutat);\n    setAnteil(0);\n  };\n\n  return (\n    <StyledForm\n      className={className}\n      onSubmit={onSubmitZutat}\n    >\n      <StyledLabel>{label}:</StyledLabel>\n      {zutatenOptions\n        ? <StyledSelect\n          type=\"text\"\n          value={zutat}\n          onChange={({ target: { value } }) => setZutat(value as string)}\n        >\n          {zutatenOptions}\n        </StyledSelect>\n        : <StyledTextField\n          value={zutat}\n          onChange={({ target: { value } }) => setZutat(value)}\n        />}\n      <StyledNumberField\n        label=\"Anteil\"\n        value={anteil}\n        update={(value) => setAnteil(value)}\n      />\n      <Button type=\"submit\" >\n          Hinzufügen\n      </Button>\n    </StyledForm>\n  );\n};\n","import React, { FC } from 'react';\nimport { MenuItem } from '@mui/material';\nimport styled from '@emotion/styled';\n\nimport { NeueZutat } from './NeueZutat';\nimport { useVerseifungsZutaten, useZutaten } from '../../contexts/SeifeContext';\nimport { zutatenNamen } from '../../resources/verseifungszahlen';\nimport { margins } from '../../theme';\n\nconst StyledNeueZutat = styled(NeueZutat)`\nmargin-top: ${margins.m};\n`;\n\nexport const NeueZutaten: FC = () => {\n  const zutatenOptions = zutatenNamen.map((name: string): JSX.Element => <MenuItem value={name} key={name}>{name}</MenuItem>);\n\n  return (\n    <>\n      <NeueZutat label=\"Neues Öl, Fett oder Säure\" useZutaten={useVerseifungsZutaten} zutatenOptions={zutatenOptions}/>\n      <StyledNeueZutat label=\"Neuer Zusatz\" useZutaten={useZutaten}/>\n    </>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from '@emotion/styled';\n\nimport { Metadata } from './components/Metadata';\nimport { Rezept } from './components/Rezept';\nimport { Zutaten } from './components/zutaten/Zutaten';\nimport { Persistenz } from './components/Persistenz';\nimport { mainColor, margins } from './theme';\nimport { Info } from './components/Info';\nimport { Lauge } from './components/lauge/Lauge';\nimport { SeifeProvider } from './contexts/SeifeContext';\nimport { NeueZutaten } from './components/zutaten/NeueZutaten';\n\nexport const StyledApp = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const StyledContainer = styled.div`\n  max-width: 80%;\n  padding-top: ${margins.m};\n`;\n\nconst Line = styled.div`\n  height: ${margins.m};\n  border-bottom: 1px solid ${mainColor};\n  margin-bottom: ${margins.m};\n`;\n\nconst App: FC = () => {\n  return (\n    <StyledApp className=\"App\">\n      <StyledContainer>\n        <SeifeProvider>\n          <Metadata/>\n          <Line />\n          <Rezept />\n          <Line />\n          <NeueZutaten />\n          <Line />\n          <Zutaten />\n          <Lauge />\n          <Line />\n          <Info />\n          <Persistenz />\n        </SeifeProvider>\n      </StyledContainer>\n    </StyledApp>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}